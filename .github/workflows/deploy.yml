name: Deploy to Production

on:
  workflow_run:
    workflows: ["Django CI"]
    types:
      - completed

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            lvccrespo/cacrespo-website:latest
            lvccrespo/cacrespo-website:${{ github.sha }}
      
  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the project directory
            cd ~/website

            # Create the .env file from the GitHub secret
            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

            # Pull the latest Docker image(s) defined in docker-compose.yml
            docker compose pull

            # Stop current running containers
            docker compose down

            # Start the application with the new image
            docker compose up -d

            # Clean up old, unused Docker images
            docker image prune -f
